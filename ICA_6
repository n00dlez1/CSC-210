\\ ICA #6 
\\ WORD OF THE DAY: JUNIT
\\ Part 1
public static int findMax(int[] arr, int index){
  \\ base case
  if (index == arr.length - 1 ){
    return arr[index];
  }
  \\ recursive call
  int nextMax = findMax(arr, index + 1);
  if (arr[index] > nextMax){
  return arr[index];
  } else {
    return nextMax;
    }
}

\\ Part 2
\\ To approach this problem if the array was only the argument
\\ You would create a new array each time minus the first index
public static int findMax(int[] arr){
  \\ base case
  if (arr.length == 1){
    return arr[0];
  }
  int[] newArr = new int[arr.length-1];
  for (int i = 1; i < arr.length; i++){
    newArr[i-1] = arr[i];
  }
  \\ recursive call
  int nextMax = findMax(newArr);
  if (arr[0] > nextMax){
    return arr[0];
    } else {
      return nextMax
    }
}

\\ Part 3
public static String replaceChar(String mySr, char oldChar, char newChar){
  \\ base case
  if (myStr.isEmpty()){
    return myStr
  }
  \\ recursive call
  if (myStr.charAt(0) == oldChar){
    return newChar + replaceChar(myStr.substring[1], oldChar, newChar);
  } else {
      return myStr.charAt(0) + replaceChar(myStr.substring[1], oldChar, newChar);
      }
}
